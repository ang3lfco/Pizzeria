/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package presentacion;

import dao.Conexion;
import dao.ProductoDAO;
import java.awt.Color;
import java.util.List;
import javax.swing.table.DefaultTableModel;
import objetos.Producto;

/**
 *
 * @author martinez
 */
public class frmPizzeria extends javax.swing.JFrame {
    private ProductoDAO productoDAO;
    private Producto productoSeleccionado;

    /**
     * Creates new form frmPizzeria
     */
    public frmPizzeria() {
        initComponents();
        setLocationRelativeTo(null);
        productoDAO = new ProductoDAO(new Conexion());
        tblProductos1.setBackground(new Color(51,0,51));
        tblProductos1.getTableHeader().setBackground(new Color(100, 149, 237));
        cargarTablaProductos();
        
        // Agregar listener para seleccionar un producto
        tblProductos1.getSelectionModel().addListSelectionListener(e -> cargarProductoSeleccionado());
        
        
        // Acciones del botón Agregar/Actualizar
        btnGuardar1.addActionListener(e -> {
            if (productoSeleccionado == null) {
                // Agregar nuevo producto
                Producto producto = new Producto(
                    txfNombre1.getText(),
                    Float.parseFloat(txfPrecio1.getText()),
                    txfDescripcion1.getText()
                );
                productoDAO.agregar(producto);
            } else {
                // Actualizar producto existente
                productoSeleccionado.setNombre(txfNombre1.getText());
                productoSeleccionado.setPrecio(Float.parseFloat(txfPrecio1.getText()));
                productoSeleccionado.setDescripcion(txfDescripcion1.getText());
                productoDAO.actualizar(productoSeleccionado);
            }
            cargarTablaProductos();
            limpiarCampos();
        });

        // Acciones del botón Cancelar/Eliminar
        btnCancelar1.addActionListener(e -> {
            if (productoSeleccionado != null) {
                productoDAO.eliminar(productoSeleccionado.getId());
            }
            cargarTablaProductos();
            limpiarCampos();
        });
    }
    
    // Método para cargar la tabla con productos desde la base de datos
    private void cargarTablaProductos() {
        List<Producto> productos = productoDAO.consultar();
        DefaultTableModel model = (DefaultTableModel) tblProductos1.getModel();
        model.setRowCount(0); // Limpiar tabla
        productos.forEach(producto -> {
            model.addRow(new Object[]{producto.getId(), producto.getNombre(), producto.getPrecio(), producto.getDescripcion()});
        });
    }
    
    // Método para cargar los datos del producto seleccionado en los campos de texto
    private void cargarProductoSeleccionado() {
        int selectedRow = tblProductos1.getSelectedRow();
        if (selectedRow != -1) {
            productoSeleccionado = new Producto();
            productoSeleccionado.setId((int) tblProductos1.getValueAt(selectedRow, 0));
            txfNombre1.setText((String) tblProductos1.getValueAt(selectedRow, 1));
            txfPrecio1.setText(tblProductos1.getValueAt(selectedRow, 2).toString());
            txfDescripcion1.setText((String) tblProductos1.getValueAt(selectedRow, 3));

            // Cambiar el texto de los botones
            btnGuardar1.setText("Actualizar");
            btnCancelar1.setText("Eliminar");
        }
    }
    
    // Método para limpiar los campos de texto y resetear los botones
    private void limpiarCampos() {
        txfNombre1.setText("Nombre");
        txfPrecio1.setText("Precio");
        txfDescripcion1.setText("Descripcion");
        productoSeleccionado = null;

        btnGuardar1.setText("Agregar");
        btnCancelar1.setText("Cancelar");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblProductos1 = new javax.swing.JTable();
        txfNombre1 = new javax.swing.JTextField();
        txfPrecio1 = new javax.swing.JTextField();
        jScrollPane4 = new javax.swing.JScrollPane();
        txfDescripcion1 = new javax.swing.JTextArea();
        btnCancelar1 = new javax.swing.JButton();
        btnGuardar1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));

        tblProductos1.setBackground(new java.awt.Color(51, 0, 51));
        tblProductos1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        tblProductos1.setForeground(new java.awt.Color(255, 255, 255));
        tblProductos1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "Nombre", "Precio", "Descripcion"
            }
        ));
        jScrollPane3.setViewportView(tblProductos1);

        txfNombre1.setBackground(new java.awt.Color(51, 0, 51));
        txfNombre1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txfNombre1.setForeground(new java.awt.Color(255, 255, 255));
        txfNombre1.setText("Nombre");
        txfNombre1.setBorder(null);

        txfPrecio1.setBackground(new java.awt.Color(51, 0, 51));
        txfPrecio1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txfPrecio1.setForeground(new java.awt.Color(255, 255, 255));
        txfPrecio1.setText("Precio");
        txfPrecio1.setBorder(null);

        txfDescripcion1.setBackground(new java.awt.Color(51, 0, 51));
        txfDescripcion1.setColumns(20);
        txfDescripcion1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txfDescripcion1.setForeground(new java.awt.Color(255, 255, 255));
        txfDescripcion1.setRows(5);
        txfDescripcion1.setText("Descripcion");
        txfDescripcion1.setToolTipText("");
        txfDescripcion1.setBorder(null);
        jScrollPane4.setViewportView(txfDescripcion1);

        btnCancelar1.setBackground(new java.awt.Color(51, 0, 51));
        btnCancelar1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnCancelar1.setForeground(new java.awt.Color(255, 255, 255));
        btnCancelar1.setText("Cancelar");
        btnCancelar1.setBorder(null);

        btnGuardar1.setBackground(new java.awt.Color(51, 0, 51));
        btnGuardar1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnGuardar1.setForeground(new java.awt.Color(255, 255, 255));
        btnGuardar1.setText("Agregar");
        btnGuardar1.setBorder(null);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txfNombre1)
                    .addComponent(txfPrecio1, javax.swing.GroupLayout.DEFAULT_SIZE, 296, Short.MAX_VALUE)
                    .addComponent(jScrollPane4)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnCancelar1, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnGuardar1, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 466, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 469, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txfNombre1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txfPrecio1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnCancelar1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnGuardar1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmPizzeria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmPizzeria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmPizzeria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmPizzeria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmPizzeria().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar1;
    private javax.swing.JButton btnGuardar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable tblProductos1;
    private javax.swing.JTextArea txfDescripcion1;
    private javax.swing.JTextField txfNombre1;
    private javax.swing.JTextField txfPrecio1;
    // End of variables declaration//GEN-END:variables
}
